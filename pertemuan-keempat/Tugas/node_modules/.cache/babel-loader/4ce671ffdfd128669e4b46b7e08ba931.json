{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\MingguKe3\\\\hello\\\\hello-world-app\\\\src\\\\lifecycle.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hello: \"World!\"\n    };\n  }\n\n  componentWillMount() {\n    console.log(\"componentWillMount()\");\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount()\");\n  }\n\n  changeState() {\n    this.setState({\n      hello: \"Geek!\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"GeeksForGeeks.org, Hello\", this.state.hello]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: this.changeState.bind(this),\n          children: \"Press Here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"shouldComponentUpdate()\");\n    return true;\n  }\n\n  componentWillUpdate() {\n    console.log(\"componentWillUpdate()\");\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate()\");\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 5\n}, this), document.getElementById('root'));\nexport default App;","map":{"version":3,"sources":["C:/Users/ROG/MingguKe3/hello/hello-world-app/src/lifecycle.js"],"names":["React","ReactDOM","App","Test","Component","constructor","props","state","hello","componentWillMount","console","log","componentDidMount","changeState","setState","render","bind","shouldComponentUpdate","nextProps","nextState","componentWillUpdate","componentDidUpdate","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAG;AAAV,KAAb;AACH;;AAEDC,EAAAA,kBAAkB,GAClB;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAEDC,EAAAA,iBAAiB,GACjB;AACIF,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;;AAEDE,EAAAA,WAAW,GACX;AACI,SAAKC,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAG;AAAV,KAAd;AACH;;AAEDO,EAAAA,MAAM,GACN;AACI,wBACI;AAAA,8BACA;AAAA,+CAA8B,KAAKR,KAAL,CAAWC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,+BACC;AAAG,UAAA,OAAO,EAAE,KAAKK,WAAL,CAAiBG,IAAjB,CAAsB,IAAtB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EACrB;AACIT,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,WAAO,IAAP;AACH;;AAEDS,EAAAA,mBAAmB,GACnB;AACIV,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;;AAEDU,EAAAA,kBAAkB,GAClB;AACIX,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AA/C8B;;AAiDnCV,QAAQ,CAACc,MAAT,eACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EAEIO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ;AAKI,eAAerB,GAAf","sourcesContent":["import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport App from './App';\r\n\r\nclass Test extends React.Component { \r\n    constructor(props) \r\n    { \r\n        super(props); \r\n        this.state = { hello : \"World!\" }; \r\n    } \r\n\r\n    componentWillMount() \r\n    { \r\n        console.log(\"componentWillMount()\"); \r\n    } \r\n\r\n    componentDidMount() \r\n    { \r\n        console.log(\"componentDidMount()\"); \r\n    } \r\n\r\n    changeState() \r\n    { \r\n        this.setState({ hello : \"Geek!\" }); \r\n    } \r\n\r\n    render() \r\n    { \r\n        return ( \r\n            <div> \r\n            <h1>GeeksForGeeks.org, Hello{ this.state.hello }</h1> \r\n            <h2> \r\n             <a onClick={this.changeState.bind(this)}>Press Here!</a> \r\n            </h2> \r\n            </div>); \r\n    } \r\n\r\n    shouldComponentUpdate(nextProps, nextState) \r\n    { \r\n        console.log(\"shouldComponentUpdate()\"); \r\n        return true; \r\n    } \r\n\r\n    componentWillUpdate() \r\n    { \r\n        console.log(\"componentWillUpdate()\"); \r\n    } \r\n\r\n    componentDidUpdate() \r\n    { \r\n        console.log(\"componentDidUpdate()\"); \r\n    } \r\n}\r\nReactDOM.render( \r\n    <Test />, \r\n    document.getElementById('root')); \r\n\r\n\r\n    export default App;"]},"metadata":{},"sourceType":"module"}